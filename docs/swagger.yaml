basePath: /
definitions:
  gin.H:
    additionalProperties: true
    type: object
  models.Competition:
    properties:
      contact:
        type: string
      date:
        type: string
      description:
        type: string
      location:
        type: string
      name:
        type: string
      organizer:
        type: string
    required:
    - name
    type: object
  models.CompetitionListResponse:
    properties:
      competitions:
        items:
          $ref: '#/definitions/models.CompetitionResponse'
        type: array
    type: object
  models.CompetitionResponse:
    properties:
      contact:
        type: string
      date:
        type: string
      description:
        type: string
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      organizer:
        type: string
    type: object
  models.CompetitionScaleInput:
    properties:
      category:
        type: string
      competition_id:
        type: integer
      points_door1:
        type: integer
      points_door2:
        type: integer
      points_door3:
        type: integer
      points_door4:
        type: integer
      points_door5:
        type: integer
      points_door6:
        type: integer
      zone:
        type: string
    required:
    - category
    - competition_id
    - points_door1
    - points_door2
    - points_door3
    - points_door4
    - points_door5
    - points_door6
    - zone
    type: object
  models.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.LoginUser:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
host: localhost:9000
info:
  contact:
    email: orkys.com@gmail.com
    name: API Support
    url: http://www.example.com/support
  description: This is the API documentation for the Orkys API Gateway
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://example.com/terms/
  title: Orkys API
  version: "1.0"
paths:
  /competition:
    get:
      consumes:
      - application/json
      description: Lists all competitions
      produces:
      - application/json
      responses:
        "200":
          description: Returns competition data
          schema:
            $ref: '#/definitions/models.CompetitionListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: List competitions
      tags:
      - competition
    post:
      consumes:
      - application/json
      description: Creates a new competition and returns a JWT token.
      parameters:
      - description: Competition data
        in: body
        name: competition
        required: true
        schema:
          $ref: '#/definitions/models.Competition'
      produces:
      - application/json
      responses:
        "200":
          description: Returns competition data
          schema:
            $ref: '#/definitions/models.CompetitionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a competition
      tags:
      - competition
  /competition/zone:
    post:
      consumes:
      - application/json
      description: Adds a zone to a competition
      parameters:
      - description: Competition data
        in: body
        name: competition
        required: true
        schema:
          $ref: '#/definitions/models.CompetitionScaleInput'
      produces:
      - application/json
      responses:
        "200":
          description: Returns competition data
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Add a zone to a competition
      tags:
      - competition
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user with email and password and returns a JWT
        token.
      parameters:
      - description: Login credentials
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/models.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: Returns user information and tokens in cookies
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Log in a user
      tags:
      - auth
  /refresh:
    get:
      consumes:
      - application/json
      description: Takes a refresh token and returns a new access token (and possibly
        a new refresh token).
      parameters:
      - description: Bearer <refresh_token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: New access/refresh token pair in http-only cookies
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (missing or invalid token)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Refresh a JWT token
      tags:
      - auth
swagger: "2.0"
