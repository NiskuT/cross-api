basePath: /
definitions:
  gin.H:
    additionalProperties: true
    type: object
  models.ChangePasswordInput:
    properties:
      current_password:
        type: string
      new_password:
        minLength: 8
        type: string
    required:
    - current_password
    - new_password
    type: object
  models.Competition:
    properties:
      contact:
        type: string
      date:
        type: string
      description:
        type: string
      location:
        type: string
      name:
        type: string
      organizer:
        type: string
    required:
    - name
    type: object
  models.CompetitionListResponse:
    properties:
      competitions:
        items:
          $ref: '#/definitions/models.CompetitionResponse'
        type: array
    type: object
  models.CompetitionResponse:
    properties:
      contact:
        type: string
      date:
        type: string
      description:
        type: string
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      organizer:
        type: string
    type: object
  models.CompetitionScaleInput:
    properties:
      category:
        type: string
      competition_id:
        type: integer
      points_door1:
        type: integer
      points_door2:
        type: integer
      points_door3:
        type: integer
      points_door4:
        type: integer
      points_door5:
        type: integer
      points_door6:
        type: integer
      zone:
        type: string
    required:
    - category
    - competition_id
    - points_door1
    - points_door2
    - points_door3
    - points_door4
    - points_door5
    - points_door6
    - zone
    type: object
  models.CompetitionZoneDeleteInput:
    properties:
      category:
        type: string
      competition_id:
        type: integer
      zone:
        type: string
    required:
    - category
    - competition_id
    - zone
    type: object
  models.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.ForgotPasswordInput:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  models.LiverankingListResponse:
    properties:
      category:
        type: string
      competition_id:
        type: integer
      gender:
        type: string
      page:
        type: integer
      page_size:
        type: integer
      rankings:
        items:
          $ref: '#/definitions/models.LiverankingResponse'
        type: array
      total:
        type: integer
    type: object
  models.LiverankingResponse:
    properties:
      category:
        type: string
      chrono_sec:
        type: integer
      dossard:
        type: integer
      first_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
      number_of_runs:
        type: integer
      penality:
        type: integer
      rank:
        type: integer
      total_points:
        type: integer
    type: object
  models.LoginUser:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.ParticipantInput:
    properties:
      category:
        type: string
      competition_id:
        type: integer
      dossard_number:
        type: integer
      first_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
    required:
    - category
    - competition_id
    - dossard_number
    - first_name
    - gender
    - last_name
    type: object
  models.ParticipantListResponse:
    properties:
      participants:
        items:
          $ref: '#/definitions/models.ParticipantResponse'
        type: array
    type: object
  models.ParticipantResponse:
    properties:
      category:
        type: string
      competition_id:
        type: integer
      dossard_number:
        type: integer
      first_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
    type: object
  models.RefereeInput:
    properties:
      competition_id:
        type: integer
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    required:
    - competition_id
    - email
    - first_name
    - last_name
    type: object
  models.RoleResponse:
    properties:
      roles:
        items:
          type: string
        type: array
    type: object
  models.RunInput:
    properties:
      chrono_sec:
        type: integer
      competition_id:
        type: integer
      door1:
        type: boolean
      door2:
        type: boolean
      door3:
        type: boolean
      door4:
        type: boolean
      door5:
        type: boolean
      door6:
        type: boolean
      dossard:
        type: integer
      penality:
        type: integer
      zone:
        type: string
    required:
    - competition_id
    - dossard
    - zone
    type: object
  models.RunResponse:
    properties:
      chrono_sec:
        type: integer
      competition_id:
        type: integer
      door1:
        type: boolean
      door2:
        type: boolean
      door3:
        type: boolean
      door4:
        type: boolean
      door5:
        type: boolean
      door6:
        type: boolean
      dossard:
        type: integer
      penality:
        type: integer
      run_number:
        type: integer
      zone:
        type: string
    type: object
  models.ZoneResponse:
    properties:
      category:
        type: string
      points_door1:
        type: integer
      points_door2:
        type: integer
      points_door3:
        type: integer
      points_door4:
        type: integer
      points_door5:
        type: integer
      points_door6:
        type: integer
      zone:
        type: string
    type: object
  models.ZonesListResponse:
    properties:
      competition_id:
        type: integer
      zones:
        items:
          $ref: '#/definitions/models.ZoneResponse'
        type: array
    type: object
host: localhost:9000
info:
  contact:
    email: orkys.com@gmail.com
    name: API Support
    url: http://www.example.com/support
  description: This is the API documentation for the Orkys API Gateway
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://example.com/terms/
  title: Orkys API
  version: "1.0"
paths:
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Generates a new password and sends it to the user's email address
      parameters:
      - description: Email for password reset
        in: body
        name: forgotPasswordRequest
        required: true
        schema:
          $ref: '#/definitions/models.ForgotPasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset email sent
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Reset forgotten password
      tags:
      - auth
  /auth/password:
    put:
      consumes:
      - application/json
      description: Allows authenticated users to change their password by providing
        current and new password
      parameters:
      - description: Authentication cookie
        in: header
        name: Cookie
        required: true
        type: string
      - description: Password change data
        in: body
        name: changePasswordRequest
        required: true
        schema:
          $ref: '#/definitions/models.ChangePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: Password changed successfully
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid current password)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Change user password
      tags:
      - auth
  /competition:
    get:
      consumes:
      - application/json
      description: Lists all competitions
      parameters:
      - description: Authentication cookie
        in: header
        name: Cookie
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns competition data
          schema:
            $ref: '#/definitions/models.CompetitionListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: List competitions
      tags:
      - competition
    post:
      consumes:
      - application/json
      description: Creates a new competition and returns a JWT token.
      parameters:
      - description: Authentication cookie
        in: header
        name: Cookie
        required: true
        type: string
      - description: Competition data
        in: body
        name: competition
        required: true
        schema:
          $ref: '#/definitions/models.Competition'
      produces:
      - application/json
      responses:
        "200":
          description: Returns competition data
          schema:
            $ref: '#/definitions/models.CompetitionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a competition
      tags:
      - competition
  /competition/{competitionID}/liveranking:
    get:
      consumes:
      - application/json
      description: Retrieves live ranking for a competition with optional category
        and gender filtering
      parameters:
      - description: Authentication cookie
        in: header
        name: Cookie
        required: true
        type: string
      - description: Competition ID
        in: path
        name: competitionID
        required: true
        type: integer
      - description: Category filter (optional)
        in: query
        name: category
        type: string
      - description: Gender filter (optional, H or F)
        in: query
        name: gender
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Page size (default: 10)'
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Returns live ranking data
          schema:
            $ref: '#/definitions/models.LiverankingListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Competition not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get live ranking
      tags:
      - competition
  /competition/{competitionID}/participant/{dossard}:
    get:
      consumes:
      - application/json
      description: Retrieves a participant's information based on dossard number and
        competition ID
      parameters:
      - description: Authentication cookie
        in: header
        name: Cookie
        required: true
        type: string
      - description: Competition ID
        in: path
        name: competitionID
        required: true
        type: integer
      - description: Dossard Number
        in: path
        name: dossard
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Returns participant data
          schema:
            $ref: '#/definitions/models.ParticipantResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Participant not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get participant information
      tags:
      - participant
  /competition/{competitionID}/participants:
    get:
      consumes:
      - application/json
      description: Lists all participants for a competition filtered by category
      parameters:
      - description: Authentication cookie
        in: header
        name: Cookie
        required: true
        type: string
      - description: Competition ID
        in: path
        name: competitionID
        required: true
        type: integer
      - description: Category filter
        in: query
        name: category
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns list of participants
          schema:
            $ref: '#/definitions/models.ParticipantListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Competition not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: List participants by category
      tags:
      - participant
  /competition/{competitionID}/zones:
    get:
      consumes:
      - application/json
      description: Lists all available zones for a competition
      parameters:
      - description: Authentication cookie
        in: header
        name: Cookie
        required: true
        type: string
      - description: Competition ID
        in: path
        name: competitionID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Returns list of zones
          schema:
            $ref: '#/definitions/models.ZonesListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Competition not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: List zones for a competition
      tags:
      - competition
  /competition/participants:
    post:
      consumes:
      - multipart/form-data
      description: Adds multiple participants to a competition from a CSV or Excel
        file
      parameters:
      - description: Authentication cookie
        in: header
        name: Cookie
        required: true
        type: string
      - description: Competition ID
        in: formData
        name: competitionID
        required: true
        type: integer
      - description: 'CSV or Excel file with participants data (format: dossard number,
          category, last name, first name, gender)'
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully added participants
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Add participants to a competition
      tags:
      - competition
  /competition/referee:
    post:
      consumes:
      - application/json
      description: Invites a user as a referee to a competition
      parameters:
      - description: Authentication cookie
        in: header
        name: Cookie
        required: true
        type: string
      - description: Referee data
        in: body
        name: referee
        required: true
        schema:
          $ref: '#/definitions/models.RefereeInput'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully added referee
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Add a referee to a competition
      tags:
      - competition
  /competition/zone:
    delete:
      consumes:
      - application/json
      description: Deletes an existing zone from a competition
      parameters:
      - description: Authentication cookie
        in: header
        name: Cookie
        required: true
        type: string
      - description: Zone deletion data
        in: body
        name: zone
        required: true
        schema:
          $ref: '#/definitions/models.CompetitionZoneDeleteInput'
      produces:
      - application/json
      responses:
        "200":
          description: Returns success message
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Zone not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a zone from a competition
      tags:
      - competition
    post:
      consumes:
      - application/json
      description: Adds a zone to a competition
      parameters:
      - description: Authentication cookie
        in: header
        name: Cookie
        required: true
        type: string
      - description: Competition data
        in: body
        name: competition
        required: true
        schema:
          $ref: '#/definitions/models.CompetitionScaleInput'
      produces:
      - application/json
      responses:
        "200":
          description: Returns competition data
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Add a zone to a competition
      tags:
      - competition
    put:
      consumes:
      - application/json
      description: Updates an existing zone in a competition
      parameters:
      - description: Authentication cookie
        in: header
        name: Cookie
        required: true
        type: string
      - description: Competition data
        in: body
        name: competition
        required: true
        schema:
          $ref: '#/definitions/models.CompetitionScaleInput'
      produces:
      - application/json
      responses:
        "200":
          description: Returns success message
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Zone not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a zone in a competition
      tags:
      - competition
  /login:
    put:
      consumes:
      - application/json
      description: Authenticates a user with email and password and returns a JWT
        token.
      parameters:
      - description: Login credentials
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/models.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: Returns user information and tokens in cookies
          schema:
            $ref: '#/definitions/models.RoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Log in a user
      tags:
      - auth
  /logout:
    post:
      consumes:
      - application/json
      description: Clears authentication cookies to log out the user
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged out
          schema:
            $ref: '#/definitions/gin.H'
      summary: Log out a user
      tags:
      - auth
  /participant:
    post:
      consumes:
      - application/json
      description: Creates a single participant for a competition
      parameters:
      - description: Authentication cookie
        in: header
        name: Cookie
        required: true
        type: string
      - description: Participant data
        in: body
        name: participant
        required: true
        schema:
          $ref: '#/definitions/models.ParticipantInput'
      produces:
      - application/json
      responses:
        "201":
          description: Returns created participant data
          schema:
            $ref: '#/definitions/models.ParticipantResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized (invalid credentials)
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Participant already exists
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a participant
      tags:
      - participant
  /run:
    post:
      consumes:
      - application/json
      description: Creates a new run and updates the liveranking
      parameters:
      - description: Authentication cookie
        in: header
        name: Cookie
        required: true
        type: string
      - description: Run data
        in: body
        name: run
        required: true
        schema:
          $ref: '#/definitions/models.RunInput'
      produces:
      - application/json
      responses:
        "201":
          description: Returns created run data
          schema:
            $ref: '#/definitions/models.RunResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new run
      tags:
      - run
swagger: "2.0"
