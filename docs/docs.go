// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "orkys.com@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/competition": {
            "get": {
                "description": "Lists all competitions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "competition"
                ],
                "summary": "List competitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication cookie",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns competition data",
                        "schema": {
                            "$ref": "#/definitions/models.CompetitionListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid credentials)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new competition and returns a JWT token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "competition"
                ],
                "summary": "Create a competition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication cookie",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Competition data",
                        "name": "competition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Competition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns competition data",
                        "schema": {
                            "$ref": "#/definitions/models.CompetitionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid credentials)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/competition/participants": {
            "post": {
                "description": "Adds multiple participants to a competition from an Excel file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "competition"
                ],
                "summary": "Add participants to a competition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication cookie",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Competition ID",
                        "name": "competitionID",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Participant category",
                        "name": "category",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Excel file with participants data",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added participants",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid credentials)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/competition/referee": {
            "post": {
                "description": "Invites a user as a referee to a competition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "competition"
                ],
                "summary": "Add a referee to a competition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication cookie",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Referee data",
                        "name": "referee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RefereeInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added referee",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid credentials)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/competition/zone": {
            "post": {
                "description": "Adds a zone to a competition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "competition"
                ],
                "summary": "Add a zone to a competition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication cookie",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Competition data",
                        "name": "competition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CompetitionScaleInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns competition data",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid credentials)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/competition/{competitionID}/participant/{dossard}": {
            "get": {
                "description": "Retrieves a participant's information based on dossard number and competition ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "participant"
                ],
                "summary": "Get participant information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication cookie",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Competition ID",
                        "name": "competitionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Dossard Number",
                        "name": "dossard",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns participant data",
                        "schema": {
                            "$ref": "#/definitions/models.ParticipantResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid credentials)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Participant not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/competition/{competitionID}/zones": {
            "get": {
                "description": "Lists all available zones for a competition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "competition"
                ],
                "summary": "List zones for a competition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication cookie",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Competition ID",
                        "name": "competitionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of zones",
                        "schema": {
                            "$ref": "#/definitions/models.ZonesListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid credentials)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Competition not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "put": {
                "description": "Authenticates a user with email and password and returns a JWT token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log in a user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns user information and tokens in cookies",
                        "schema": {
                            "$ref": "#/definitions/models.RoleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid credentials)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Clears authentication cookies to log out the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log out a user",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/run": {
            "post": {
                "description": "Creates a new run and updates the liveranking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "run"
                ],
                "summary": "Create a new run",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication cookie",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Run data",
                        "name": "run",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RunInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns created run data",
                        "schema": {
                            "$ref": "#/definitions/models.RunResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        },
        "models.Competition": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "contact": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organizer": {
                    "type": "string"
                }
            }
        },
        "models.CompetitionListResponse": {
            "type": "object",
            "properties": {
                "competitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CompetitionResponse"
                    }
                }
            }
        },
        "models.CompetitionResponse": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organizer": {
                    "type": "string"
                }
            }
        },
        "models.CompetitionScaleInput": {
            "type": "object",
            "required": [
                "category",
                "competition_id",
                "points_door1",
                "points_door2",
                "points_door3",
                "points_door4",
                "points_door5",
                "points_door6",
                "zone"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "competition_id": {
                    "type": "integer"
                },
                "points_door1": {
                    "type": "integer"
                },
                "points_door2": {
                    "type": "integer"
                },
                "points_door3": {
                    "type": "integer"
                },
                "points_door4": {
                    "type": "integer"
                },
                "points_door5": {
                    "type": "integer"
                },
                "points_door6": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.LoginUser": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.ParticipantResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "competition_id": {
                    "type": "integer"
                },
                "dossard_number": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "models.RefereeInput": {
            "type": "object",
            "required": [
                "competition_id",
                "email",
                "first_name",
                "last_name"
            ],
            "properties": {
                "competition_id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "models.RoleResponse": {
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.RunInput": {
            "type": "object",
            "required": [
                "competition_id",
                "dossard",
                "zone"
            ],
            "properties": {
                "chrono_sec": {
                    "type": "integer"
                },
                "competition_id": {
                    "type": "integer"
                },
                "door1": {
                    "type": "boolean"
                },
                "door2": {
                    "type": "boolean"
                },
                "door3": {
                    "type": "boolean"
                },
                "door4": {
                    "type": "boolean"
                },
                "door5": {
                    "type": "boolean"
                },
                "door6": {
                    "type": "boolean"
                },
                "dossard": {
                    "type": "integer"
                },
                "penality": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "models.RunResponse": {
            "type": "object",
            "properties": {
                "chrono_sec": {
                    "type": "integer"
                },
                "competition_id": {
                    "type": "integer"
                },
                "door1": {
                    "type": "boolean"
                },
                "door2": {
                    "type": "boolean"
                },
                "door3": {
                    "type": "boolean"
                },
                "door4": {
                    "type": "boolean"
                },
                "door5": {
                    "type": "boolean"
                },
                "door6": {
                    "type": "boolean"
                },
                "dossard": {
                    "type": "integer"
                },
                "penality": {
                    "type": "integer"
                },
                "run_number": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "models.ZoneResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "models.ZonesListResponse": {
            "type": "object",
            "properties": {
                "competition_id": {
                    "type": "integer"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ZoneResponse"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:9000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Orkys API",
	Description:      "This is the API documentation for the Orkys API Gateway",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
